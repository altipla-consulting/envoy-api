// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/admin/v2alpha/server_info.proto

package envoy_admin_v2alpha

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerInfo_State int32

const (
	// Server is live and serving traffic.
	ServerInfo_LIVE ServerInfo_State = 0
	// Server is draining listeners in response to external health checks failing.
	ServerInfo_DRAINING ServerInfo_State = 1
	// Server has not yet completed cluster manager initialization.
	ServerInfo_PRE_INITIALIZING ServerInfo_State = 2
	// Server is running the cluster manager initialization callbacks (e.g., RDS).
	ServerInfo_INITIALIZING ServerInfo_State = 3
)

var ServerInfo_State_name = map[int32]string{
	0: "LIVE",
	1: "DRAINING",
	2: "PRE_INITIALIZING",
	3: "INITIALIZING",
}
var ServerInfo_State_value = map[string]int32{
	"LIVE":             0,
	"DRAINING":         1,
	"PRE_INITIALIZING": 2,
	"INITIALIZING":     3,
}

func (x ServerInfo_State) String() string {
	return proto.EnumName(ServerInfo_State_name, int32(x))
}
func (ServerInfo_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_info_add66bfb7119c968, []int{0, 0}
}

type CommandLineOptions_IpVersion int32

const (
	CommandLineOptions_v4 CommandLineOptions_IpVersion = 0
	CommandLineOptions_v6 CommandLineOptions_IpVersion = 1
)

var CommandLineOptions_IpVersion_name = map[int32]string{
	0: "v4",
	1: "v6",
}
var CommandLineOptions_IpVersion_value = map[string]int32{
	"v4": 0,
	"v6": 1,
}

func (x CommandLineOptions_IpVersion) String() string {
	return proto.EnumName(CommandLineOptions_IpVersion_name, int32(x))
}
func (CommandLineOptions_IpVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_info_add66bfb7119c968, []int{1, 0}
}

type CommandLineOptions_Mode int32

const (
	// Validate configs and then serve traffic normally.
	CommandLineOptions_Serve CommandLineOptions_Mode = 0
	// Validate configs and exit.
	CommandLineOptions_Validate CommandLineOptions_Mode = 1
	// Completely load and initialize the config, and then exit without running the listener loop.
	CommandLineOptions_InitOnly CommandLineOptions_Mode = 2
)

var CommandLineOptions_Mode_name = map[int32]string{
	0: "Serve",
	1: "Validate",
	2: "InitOnly",
}
var CommandLineOptions_Mode_value = map[string]int32{
	"Serve":    0,
	"Validate": 1,
	"InitOnly": 2,
}

func (x CommandLineOptions_Mode) String() string {
	return proto.EnumName(CommandLineOptions_Mode_name, int32(x))
}
func (CommandLineOptions_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_info_add66bfb7119c968, []int{1, 1}
}

// Proto representation of the value returned by /server_info, containing
// server version/server status information.
type ServerInfo struct {
	// Server version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// State of the server.
	State ServerInfo_State `protobuf:"varint,2,opt,name=state,proto3,enum=envoy.admin.v2alpha.ServerInfo_State" json:"state,omitempty"`
	// Uptime since current epoch was started.
	UptimeCurrentEpoch *types.Duration `protobuf:"bytes,3,opt,name=uptime_current_epoch,json=uptimeCurrentEpoch,proto3" json:"uptime_current_epoch,omitempty"`
	// Uptime since the start of the first epoch.
	UptimeAllEpochs *types.Duration `protobuf:"bytes,4,opt,name=uptime_all_epochs,json=uptimeAllEpochs,proto3" json:"uptime_all_epochs,omitempty"`
	// Command line options the server is currently running with.
	CommandLineOptions   *CommandLineOptions `protobuf:"bytes,6,opt,name=command_line_options,json=commandLineOptions,proto3" json:"command_line_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_info_add66bfb7119c968, []int{0}
}
func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (dst *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(dst, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServerInfo) GetState() ServerInfo_State {
	if m != nil {
		return m.State
	}
	return ServerInfo_LIVE
}

func (m *ServerInfo) GetUptimeCurrentEpoch() *types.Duration {
	if m != nil {
		return m.UptimeCurrentEpoch
	}
	return nil
}

func (m *ServerInfo) GetUptimeAllEpochs() *types.Duration {
	if m != nil {
		return m.UptimeAllEpochs
	}
	return nil
}

func (m *ServerInfo) GetCommandLineOptions() *CommandLineOptions {
	if m != nil {
		return m.CommandLineOptions
	}
	return nil
}

type CommandLineOptions struct {
	// See :option:`--base-id` for details.
	BaseId uint64 `protobuf:"varint,1,opt,name=base_id,json=baseId,proto3" json:"base_id,omitempty"`
	// See :option:`--concurrency` for details.
	Concurrency uint32 `protobuf:"varint,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// See :option:`--config-path` for details.
	ConfigPath string `protobuf:"bytes,3,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// See :option:`--config-yaml` for details.
	ConfigYaml string `protobuf:"bytes,4,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
	// See :option:`--allow-unknown-fields` for details.
	AllowUnknownFields bool `protobuf:"varint,5,opt,name=allow_unknown_fields,json=allowUnknownFields,proto3" json:"allow_unknown_fields,omitempty"`
	// See :option:`--admin-address-path` for details.
	AdminAddressPath string `protobuf:"bytes,6,opt,name=admin_address_path,json=adminAddressPath,proto3" json:"admin_address_path,omitempty"`
	// See :option:`--local-address-ip-version` for details.
	LocalAddressIpVersion CommandLineOptions_IpVersion `protobuf:"varint,7,opt,name=local_address_ip_version,json=localAddressIpVersion,proto3,enum=envoy.admin.v2alpha.CommandLineOptions_IpVersion" json:"local_address_ip_version,omitempty"`
	// See :option:`--log-level` for details.
	LogLevel string `protobuf:"bytes,8,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	// See :option:`--component-log-level` for details.
	ComponentLogLevel string `protobuf:"bytes,9,opt,name=component_log_level,json=componentLogLevel,proto3" json:"component_log_level,omitempty"`
	// See :option:`--log-format` for details.
	LogFormat string `protobuf:"bytes,10,opt,name=log_format,json=logFormat,proto3" json:"log_format,omitempty"`
	// See :option:`--log-path` for details.
	LogPath string `protobuf:"bytes,11,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	// See :option:`--hot-restart-version` for details.
	HotRestartVersion bool `protobuf:"varint,12,opt,name=hot_restart_version,json=hotRestartVersion,proto3" json:"hot_restart_version,omitempty"`
	// See :option:`--service-cluster` for details.
	ServiceCluster string `protobuf:"bytes,13,opt,name=service_cluster,json=serviceCluster,proto3" json:"service_cluster,omitempty"`
	// See :option:`--service-node` for details.
	ServiceNode string `protobuf:"bytes,14,opt,name=service_node,json=serviceNode,proto3" json:"service_node,omitempty"`
	// See :option:`--service-zone` for details.
	ServiceZone string `protobuf:"bytes,15,opt,name=service_zone,json=serviceZone,proto3" json:"service_zone,omitempty"`
	// See :option:`--file-flush-interval-msec` for details.
	FileFlushInterval *types.Duration `protobuf:"bytes,16,opt,name=file_flush_interval,json=fileFlushInterval,proto3" json:"file_flush_interval,omitempty"`
	// See :option:`--drain-time-s` for details.
	DrainTime *types.Duration `protobuf:"bytes,17,opt,name=drain_time,json=drainTime,proto3" json:"drain_time,omitempty"`
	// See :option:`--parent-shutdown-time-s` for details.
	ParentShutdownTime *types.Duration `protobuf:"bytes,18,opt,name=parent_shutdown_time,json=parentShutdownTime,proto3" json:"parent_shutdown_time,omitempty"`
	// See :option:`--mode` for details.
	Mode CommandLineOptions_Mode `protobuf:"varint,19,opt,name=mode,proto3,enum=envoy.admin.v2alpha.CommandLineOptions_Mode" json:"mode,omitempty"`
	// See :option:`--max-stats` for details.
	MaxStats uint64 `protobuf:"varint,20,opt,name=max_stats,json=maxStats,proto3" json:"max_stats,omitempty"`
	// See :option:`--max-obj-name-len` for details.
	MaxObjNameLen uint64 `protobuf:"varint,21,opt,name=max_obj_name_len,json=maxObjNameLen,proto3" json:"max_obj_name_len,omitempty"`
	// See :option:`--disable-hot-restart` for details.
	DisableHotRestart bool `protobuf:"varint,22,opt,name=disable_hot_restart,json=disableHotRestart,proto3" json:"disable_hot_restart,omitempty"`
	// See :option:`--enable-mutex-tracing` for details.
	EnableMutexTracing bool `protobuf:"varint,23,opt,name=enable_mutex_tracing,json=enableMutexTracing,proto3" json:"enable_mutex_tracing,omitempty"`
	// See :option:`--restart-epoch` for details.
	RestartEpoch         uint32   `protobuf:"varint,24,opt,name=restart_epoch,json=restartEpoch,proto3" json:"restart_epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandLineOptions) Reset()         { *m = CommandLineOptions{} }
func (m *CommandLineOptions) String() string { return proto.CompactTextString(m) }
func (*CommandLineOptions) ProtoMessage()    {}
func (*CommandLineOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_info_add66bfb7119c968, []int{1}
}
func (m *CommandLineOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandLineOptions.Unmarshal(m, b)
}
func (m *CommandLineOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandLineOptions.Marshal(b, m, deterministic)
}
func (dst *CommandLineOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandLineOptions.Merge(dst, src)
}
func (m *CommandLineOptions) XXX_Size() int {
	return xxx_messageInfo_CommandLineOptions.Size(m)
}
func (m *CommandLineOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandLineOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CommandLineOptions proto.InternalMessageInfo

func (m *CommandLineOptions) GetBaseId() uint64 {
	if m != nil {
		return m.BaseId
	}
	return 0
}

func (m *CommandLineOptions) GetConcurrency() uint32 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

func (m *CommandLineOptions) GetConfigPath() string {
	if m != nil {
		return m.ConfigPath
	}
	return ""
}

func (m *CommandLineOptions) GetConfigYaml() string {
	if m != nil {
		return m.ConfigYaml
	}
	return ""
}

func (m *CommandLineOptions) GetAllowUnknownFields() bool {
	if m != nil {
		return m.AllowUnknownFields
	}
	return false
}

func (m *CommandLineOptions) GetAdminAddressPath() string {
	if m != nil {
		return m.AdminAddressPath
	}
	return ""
}

func (m *CommandLineOptions) GetLocalAddressIpVersion() CommandLineOptions_IpVersion {
	if m != nil {
		return m.LocalAddressIpVersion
	}
	return CommandLineOptions_v4
}

func (m *CommandLineOptions) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *CommandLineOptions) GetComponentLogLevel() string {
	if m != nil {
		return m.ComponentLogLevel
	}
	return ""
}

func (m *CommandLineOptions) GetLogFormat() string {
	if m != nil {
		return m.LogFormat
	}
	return ""
}

func (m *CommandLineOptions) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *CommandLineOptions) GetHotRestartVersion() bool {
	if m != nil {
		return m.HotRestartVersion
	}
	return false
}

func (m *CommandLineOptions) GetServiceCluster() string {
	if m != nil {
		return m.ServiceCluster
	}
	return ""
}

func (m *CommandLineOptions) GetServiceNode() string {
	if m != nil {
		return m.ServiceNode
	}
	return ""
}

func (m *CommandLineOptions) GetServiceZone() string {
	if m != nil {
		return m.ServiceZone
	}
	return ""
}

func (m *CommandLineOptions) GetFileFlushInterval() *types.Duration {
	if m != nil {
		return m.FileFlushInterval
	}
	return nil
}

func (m *CommandLineOptions) GetDrainTime() *types.Duration {
	if m != nil {
		return m.DrainTime
	}
	return nil
}

func (m *CommandLineOptions) GetParentShutdownTime() *types.Duration {
	if m != nil {
		return m.ParentShutdownTime
	}
	return nil
}

func (m *CommandLineOptions) GetMode() CommandLineOptions_Mode {
	if m != nil {
		return m.Mode
	}
	return CommandLineOptions_Serve
}

func (m *CommandLineOptions) GetMaxStats() uint64 {
	if m != nil {
		return m.MaxStats
	}
	return 0
}

func (m *CommandLineOptions) GetMaxObjNameLen() uint64 {
	if m != nil {
		return m.MaxObjNameLen
	}
	return 0
}

func (m *CommandLineOptions) GetDisableHotRestart() bool {
	if m != nil {
		return m.DisableHotRestart
	}
	return false
}

func (m *CommandLineOptions) GetEnableMutexTracing() bool {
	if m != nil {
		return m.EnableMutexTracing
	}
	return false
}

func (m *CommandLineOptions) GetRestartEpoch() uint32 {
	if m != nil {
		return m.RestartEpoch
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerInfo)(nil), "envoy.admin.v2alpha.ServerInfo")
	proto.RegisterType((*CommandLineOptions)(nil), "envoy.admin.v2alpha.CommandLineOptions")
	proto.RegisterEnum("envoy.admin.v2alpha.ServerInfo_State", ServerInfo_State_name, ServerInfo_State_value)
	proto.RegisterEnum("envoy.admin.v2alpha.CommandLineOptions_IpVersion", CommandLineOptions_IpVersion_name, CommandLineOptions_IpVersion_value)
	proto.RegisterEnum("envoy.admin.v2alpha.CommandLineOptions_Mode", CommandLineOptions_Mode_name, CommandLineOptions_Mode_value)
}

func init() {
	proto.RegisterFile("envoy/admin/v2alpha/server_info.proto", fileDescriptor_server_info_add66bfb7119c968)
}

var fileDescriptor_server_info_add66bfb7119c968 = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xae, 0x13, 0xc7, 0xb1, 0x4f, 0x9c, 0x44, 0xa6, 0xdd, 0x95, 0x5d, 0xb1, 0xcd, 0xf3, 0x50,
	0x24, 0x17, 0x9d, 0xbc, 0x65, 0xc3, 0x30, 0x60, 0x37, 0x0b, 0xd2, 0xa4, 0x13, 0xe6, 0x3a, 0x85,
	0x92, 0x05, 0x68, 0x6f, 0x08, 0x5a, 0xa2, 0x6d, 0x66, 0x14, 0x29, 0x48, 0xb4, 0x9b, 0xec, 0x55,
	0xf6, 0x12, 0x7b, 0xc4, 0x81, 0x87, 0xb2, 0x93, 0xa2, 0x05, 0xd2, 0x2b, 0x41, 0xe7, 0xfb, 0x21,
	0x79, 0xfe, 0xe0, 0xb9, 0xd0, 0x4b, 0x73, 0x3b, 0xe4, 0x69, 0x26, 0xf5, 0x70, 0x79, 0xc4, 0x55,
	0x3e, 0xe7, 0xc3, 0x52, 0x14, 0x4b, 0x51, 0x30, 0xa9, 0xa7, 0x26, 0xcc, 0x0b, 0x63, 0x0d, 0xe9,
	0x22, 0x2d, 0x44, 0x5a, 0x58, 0xd1, 0xbe, 0xfc, 0x7a, 0x66, 0xcc, 0x4c, 0x89, 0x21, 0x52, 0x26,
	0x8b, 0xe9, 0x30, 0x5d, 0x14, 0xdc, 0x4a, 0xa3, 0xbd, 0x68, 0xf0, 0xef, 0x26, 0xc0, 0x05, 0x5a,
	0x45, 0x7a, 0x6a, 0x08, 0x85, 0xed, 0xa5, 0x28, 0x4a, 0x69, 0x34, 0xad, 0xf5, 0x6b, 0x87, 0xad,
	0x78, 0xf5, 0x4b, 0x7e, 0x83, 0xad, 0xd2, 0x72, 0x2b, 0xe8, 0x46, 0xbf, 0x76, 0xb8, 0x77, 0xf4,
	0x3c, 0xfc, 0xc4, 0x69, 0xe1, 0x9d, 0x53, 0x78, 0xe1, 0xc8, 0xb1, 0xd7, 0x90, 0x3f, 0xa1, 0xb7,
	0xc8, 0xad, 0xcc, 0x04, 0x4b, 0x16, 0x45, 0x21, 0xb4, 0x65, 0x22, 0x37, 0xc9, 0x9c, 0x6e, 0xf6,
	0x6b, 0x87, 0x3b, 0x47, 0x4f, 0x43, 0x7f, 0xc9, 0x70, 0x75, 0xc9, 0xf0, 0x65, 0x75, 0xc9, 0x98,
	0x78, 0xd9, 0x89, 0x57, 0x9d, 0x3a, 0x11, 0x39, 0x85, 0x4e, 0x65, 0xc6, 0x95, 0xf2, 0x46, 0x25,
	0xad, 0x3f, 0xe4, 0xb4, 0xef, 0x35, 0xc7, 0x4a, 0xa1, 0x4b, 0x49, 0xde, 0x42, 0x2f, 0x31, 0x59,
	0xc6, 0x75, 0xca, 0x94, 0xd4, 0x82, 0x99, 0xdc, 0xf1, 0x4a, 0xda, 0x40, 0xa7, 0x83, 0x4f, 0xbe,
	0xef, 0xc4, 0x0b, 0x46, 0x52, 0x8b, 0x73, 0x4f, 0x8f, 0x49, 0xf2, 0x51, 0x6c, 0xf0, 0x0a, 0xb6,
	0xf0, 0xf9, 0xa4, 0x09, 0xf5, 0x51, 0x74, 0x75, 0x1a, 0x3c, 0x22, 0x6d, 0x68, 0xbe, 0x8c, 0x8f,
	0xa3, 0x71, 0x34, 0x7e, 0x15, 0xd4, 0x48, 0x0f, 0x82, 0x37, 0xf1, 0x29, 0x8b, 0xc6, 0xd1, 0x65,
	0x74, 0x3c, 0x8a, 0xde, 0xb9, 0xe8, 0x06, 0x09, 0xa0, 0xfd, 0x41, 0x64, 0x73, 0xf0, 0x5f, 0x0b,
	0xc8, 0xc7, 0x67, 0x92, 0x27, 0xb0, 0x3d, 0xe1, 0xa5, 0x60, 0x32, 0xc5, 0x2a, 0xd5, 0xe3, 0x86,
	0xfb, 0x8d, 0x52, 0xd2, 0x87, 0x9d, 0xc4, 0x68, 0x9f, 0xe3, 0xe4, 0x16, 0x4b, 0xb5, 0x1b, 0xdf,
	0x0f, 0x91, 0x6f, 0x90, 0x31, 0x95, 0x33, 0x96, 0x73, 0xeb, 0x0b, 0xd0, 0x8a, 0xc1, 0x87, 0xde,
	0x70, 0x3b, 0xbf, 0x47, 0xb8, 0xe5, 0x99, 0xc2, 0xbc, 0xae, 0x09, 0x6f, 0x79, 0xa6, 0xc8, 0x0f,
	0xd0, 0xe3, 0x4a, 0x99, 0xf7, 0x6c, 0xa1, 0xff, 0xd6, 0xe6, 0xbd, 0x66, 0x53, 0x29, 0x54, 0x5a,
	0xd2, 0xad, 0x7e, 0xed, 0xb0, 0x19, 0x13, 0xc4, 0xfe, 0xf2, 0xd0, 0x19, 0x22, 0xe4, 0x05, 0x10,
	0x4c, 0x23, 0xe3, 0x69, 0x5a, 0x88, 0xb2, 0xf4, 0x47, 0x37, 0xd0, 0x39, 0x40, 0xe4, 0xd8, 0x03,
	0x78, 0x81, 0x6b, 0xa0, 0xca, 0x24, 0x5c, 0xad, 0xd9, 0x32, 0x67, 0xab, 0x9e, 0xdc, 0xc6, 0xde,
	0xfb, 0xf1, 0x33, 0x6b, 0x13, 0x46, 0xf9, 0x95, 0x17, 0xc6, 0x8f, 0xd1, 0xb2, 0x3a, 0x66, 0x1d,
	0x26, 0xcf, 0xa0, 0xa5, 0xcc, 0x8c, 0x29, 0xb1, 0x14, 0x8a, 0x36, 0xf1, 0x42, 0x4d, 0x65, 0x66,
	0x23, 0xf7, 0x4f, 0x42, 0xe8, 0x26, 0x26, 0xcb, 0x8d, 0x76, 0xfd, 0x7a, 0x47, 0x6b, 0x21, 0xad,
	0xb3, 0x86, 0x46, 0x2b, 0xfe, 0x57, 0x00, 0x8e, 0x35, 0x35, 0x45, 0xc6, 0x2d, 0x05, 0xa4, 0x39,
	0xfb, 0x33, 0x0c, 0x90, 0xa7, 0xe0, 0xac, 0xfd, 0xdb, 0x77, 0xfc, 0x6c, 0x29, 0xe3, 0x73, 0x1e,
	0x42, 0x77, 0x6e, 0x2c, 0x2b, 0x44, 0x69, 0x79, 0x61, 0xd7, 0xaf, 0x6d, 0x63, 0x46, 0x3b, 0x73,
	0x63, 0x63, 0x8f, 0xac, 0xae, 0x7d, 0x00, 0xfb, 0x6e, 0xfc, 0x65, 0x22, 0x58, 0xa2, 0x16, 0xa5,
	0x15, 0x05, 0xdd, 0x45, 0xc7, 0xbd, 0x2a, 0x7c, 0xe2, 0xa3, 0xe4, 0x5b, 0x68, 0xaf, 0x88, 0xda,
	0xa4, 0x82, 0xee, 0x21, 0x6b, 0xa7, 0x8a, 0x8d, 0x4d, 0x2a, 0xee, 0x53, 0xfe, 0x31, 0x5a, 0xd0,
	0xfd, 0x0f, 0x28, 0xef, 0x8c, 0x16, 0x24, 0x82, 0xee, 0x54, 0x2a, 0xc1, 0xa6, 0x6a, 0x51, 0xce,
	0x99, 0xd4, 0x56, 0x14, 0x4b, 0xae, 0x68, 0xf0, 0xd0, 0xc8, 0x75, 0x9c, 0xea, 0xcc, 0x89, 0xa2,
	0x4a, 0x43, 0x7e, 0x05, 0x48, 0x0b, 0x2e, 0x35, 0x73, 0xb3, 0x48, 0x3b, 0x0f, 0x39, 0xb4, 0x90,
	0x7c, 0x29, 0x33, 0x5c, 0x21, 0x39, 0xc7, 0xd5, 0x51, 0xce, 0x17, 0x36, 0x75, 0x8d, 0x87, 0x1e,
	0xe4, 0xc1, 0x15, 0xe2, 0x65, 0x17, 0x95, 0x0a, 0xcd, 0x7e, 0x87, 0x7a, 0xe6, 0xf2, 0xd1, 0xc5,
	0x7e, 0x7a, 0xf1, 0xb9, 0xfd, 0xf4, 0xda, 0xa4, 0x22, 0x46, 0xa5, 0xeb, 0x9c, 0x8c, 0xdf, 0x30,
	0xb7, 0xde, 0x4a, 0xda, 0xc3, 0x21, 0x6c, 0x66, 0xfc, 0xc6, 0x8d, 0x7d, 0x49, 0x0e, 0x20, 0x70,
	0xa0, 0x99, 0x5c, 0x33, 0xcd, 0x33, 0xc1, 0x94, 0xd0, 0xf4, 0x31, 0x72, 0x76, 0x33, 0x7e, 0x73,
	0x3e, 0xb9, 0x1e, 0xf3, 0x4c, 0x8c, 0x84, 0x76, 0x85, 0x4f, 0x65, 0xc9, 0x27, 0x4a, 0xb0, 0x7b,
	0x0d, 0x40, 0xbf, 0xf0, 0x85, 0xaf, 0xa0, 0x3f, 0xd6, 0xf5, 0x77, 0xb3, 0x27, 0x34, 0xd2, 0xb3,
	0x85, 0x15, 0x37, 0xcc, 0x16, 0x3c, 0x91, 0x7a, 0x46, 0x9f, 0xf8, 0xd9, 0xf3, 0xd8, 0x6b, 0x07,
	0x5d, 0x7a, 0x84, 0x7c, 0x07, 0xbb, 0xab, 0xb6, 0xf2, 0x2b, 0x97, 0xe2, 0x4e, 0x68, 0x57, 0x41,
	0xdc, 0x85, 0x83, 0x67, 0xd0, 0xba, 0x9b, 0x89, 0x06, 0x6c, 0x2c, 0x7f, 0x0e, 0x1e, 0xe1, 0xf7,
	0x97, 0xa0, 0x36, 0xf8, 0x1e, 0xea, 0xee, 0xdd, 0xa4, 0x05, 0x5b, 0xb8, 0xde, 0xfd, 0x32, 0xbb,
	0xe2, 0x4a, 0xa6, 0xdc, 0x8a, 0xa0, 0xe6, 0xfe, 0x22, 0x2d, 0xed, 0xb9, 0x56, 0xb7, 0xc1, 0xc6,
	0xa4, 0x81, 0x15, 0xf8, 0xe9, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x77, 0x6e, 0xe5, 0xb5,
	0x06, 0x00, 0x00,
}
