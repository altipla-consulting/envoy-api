// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto

package v2

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Dubbo Protocol types supported by Envoy.
type ProtocolType int32

const (
	ProtocolType_Dubbo ProtocolType = 0
)

var ProtocolType_name = map[int32]string{
	0: "Dubbo",
}

var ProtocolType_value = map[string]int32{
	"Dubbo": 0,
}

func (x ProtocolType) String() string {
	return proto.EnumName(ProtocolType_name, int32(x))
}

func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{0}
}

// Dubbo Serialization types supported by Envoy.
type SerializationType int32

const (
	SerializationType_Hessian2 SerializationType = 0
)

var SerializationType_name = map[int32]string{
	0: "Hessian2",
}

var SerializationType_value = map[string]int32{
	"Hessian2": 0,
}

func (x SerializationType) String() string {
	return proto.EnumName(SerializationType_name, int32(x))
}

func (SerializationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{1}
}

// [#comment:next free field: 6]
type DubboProxy struct {
	// The human readable prefix to use when emitting statistics.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Configure the protocol used.
	ProtocolType ProtocolType `protobuf:"varint,2,opt,name=protocol_type,json=protocolType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType" json:"protocol_type,omitempty"`
	// Configure the serialization protocol used.
	SerializationType SerializationType `protobuf:"varint,3,opt,name=serialization_type,json=serializationType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType" json:"serialization_type,omitempty"`
	// The route table for the connection manager is static and is specified in this property.
	RouteConfig []*RouteConfiguration `protobuf:"bytes,4,rep,name=route_config,json=routeConfig,proto3" json:"route_config,omitempty"`
	// A list of individual Dubbo filters that make up the filter chain for requests made to the
	// Dubbo proxy. Order matters as the filters are processed sequentially. For backwards
	// compatibility, if no dubbo_filters are specified, a default Dubbo router filter
	// (`envoy.filters.dubbo.router`) is used.
	DubboFilters         []*DubboFilter `protobuf:"bytes,5,rep,name=dubbo_filters,json=dubboFilters,proto3" json:"dubbo_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DubboProxy) Reset()         { *m = DubboProxy{} }
func (m *DubboProxy) String() string { return proto.CompactTextString(m) }
func (*DubboProxy) ProtoMessage()    {}
func (*DubboProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{0}
}

func (m *DubboProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DubboProxy.Unmarshal(m, b)
}
func (m *DubboProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DubboProxy.Marshal(b, m, deterministic)
}
func (m *DubboProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DubboProxy.Merge(m, src)
}
func (m *DubboProxy) XXX_Size() int {
	return xxx_messageInfo_DubboProxy.Size(m)
}
func (m *DubboProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_DubboProxy.DiscardUnknown(m)
}

var xxx_messageInfo_DubboProxy proto.InternalMessageInfo

func (m *DubboProxy) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *DubboProxy) GetProtocolType() ProtocolType {
	if m != nil {
		return m.ProtocolType
	}
	return ProtocolType_Dubbo
}

func (m *DubboProxy) GetSerializationType() SerializationType {
	if m != nil {
		return m.SerializationType
	}
	return SerializationType_Hessian2
}

func (m *DubboProxy) GetRouteConfig() []*RouteConfiguration {
	if m != nil {
		return m.RouteConfig
	}
	return nil
}

func (m *DubboProxy) GetDubboFilters() []*DubboFilter {
	if m != nil {
		return m.DubboFilters
	}
	return nil
}

// DubboFilter configures a Dubbo filter.
// [#comment:next free field: 3]
type DubboFilter struct {
	// The name of the filter to instantiate. The name must match a supported
	// filter.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter specific configuration which depends on the filter being
	// instantiated. See the supported filters for further documentation.
	Config               *types.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DubboFilter) Reset()         { *m = DubboFilter{} }
func (m *DubboFilter) String() string { return proto.CompactTextString(m) }
func (*DubboFilter) ProtoMessage()    {}
func (*DubboFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ee9c82d7d1be64c, []int{1}
}

func (m *DubboFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DubboFilter.Unmarshal(m, b)
}
func (m *DubboFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DubboFilter.Marshal(b, m, deterministic)
}
func (m *DubboFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DubboFilter.Merge(m, src)
}
func (m *DubboFilter) XXX_Size() int {
	return xxx_messageInfo_DubboFilter.Size(m)
}
func (m *DubboFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DubboFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DubboFilter proto.InternalMessageInfo

func (m *DubboFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DubboFilter) GetConfig() *types.Any {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType", ProtocolType_name, ProtocolType_value)
	proto.RegisterEnum("envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType", SerializationType_name, SerializationType_value)
	proto.RegisterType((*DubboProxy)(nil), "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy")
	proto.RegisterType((*DubboFilter)(nil), "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter")
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto", fileDescriptor_8ee9c82d7d1be64c)
}

var fileDescriptor_8ee9c82d7d1be64c = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x97, 0xfe, 0x18, 0xdb, 0x4b, 0x06, 0x9d, 0x35, 0x89, 0xae, 0x5c, 0xca, 0x4e, 0xd5,
	0x84, 0x6c, 0x08, 0x57, 0x98, 0x44, 0x36, 0x21, 0x8e, 0x55, 0x40, 0x02, 0x71, 0xa9, 0x9c, 0xd5,
	0x0d, 0x16, 0x99, 0x1d, 0x39, 0x4e, 0x58, 0x10, 0x27, 0xfe, 0x62, 0xce, 0x3b, 0xa1, 0x3c, 0xa7,
	0x6a, 0xd4, 0x9d, 0x72, 0x7b, 0x7e, 0xef, 0xf9, 0xfb, 0x79, 0xbf, 0x20, 0x12, 0xaa, 0xd2, 0x35,
	0xbb, 0xd5, 0x6a, 0x23, 0x53, 0xb6, 0x91, 0x99, 0x15, 0x86, 0x29, 0x61, 0x7f, 0x69, 0xf3, 0x93,
	0xad, 0xcb, 0x24, 0xd1, 0xab, 0xdc, 0xe8, 0xfb, 0x9a, 0x55, 0x21, 0xcf, 0xf2, 0x1f, 0xfc, 0x4d,
	0xd7, 0x49, 0x73, 0xa3, 0xad, 0x26, 0xaf, 0x51, 0x83, 0x3a, 0x0d, 0xea, 0x34, 0x68, 0xab, 0x41,
	0xbb, 0xe9, 0x5b, 0x8d, 0xd9, 0xbb, 0xde, 0x54, 0xa3, 0x4b, 0x2b, 0x1c, 0x6f, 0x76, 0x9e, 0x6a,
	0x9d, 0x66, 0x82, 0xe1, 0x2b, 0x29, 0x37, 0x8c, 0xab, 0xb6, 0x94, 0xd9, 0xf3, 0x8a, 0x67, 0x72,
	0xcd, 0xad, 0x60, 0x5b, 0xa3, 0x0d, 0x9c, 0xa5, 0x3a, 0xd5, 0x68, 0xb2, 0xc6, 0x72, 0xde, 0x8b,
	0x7f, 0x43, 0x80, 0x9b, 0x06, 0xb7, 0x6c, 0x68, 0x64, 0x01, 0x7e, 0x61, 0xb9, 0x5d, 0xe5, 0x46,
	0x6c, 0xe4, 0xfd, 0xd4, 0x9b, 0x7b, 0x8b, 0xe3, 0xe8, 0xc9, 0x43, 0x34, 0x32, 0x83, 0xb9, 0x17,
	0x43, 0x13, 0x5b, 0x62, 0x88, 0xdc, 0xc1, 0x09, 0x2a, 0xdc, 0xea, 0x6c, 0x65, 0xeb, 0x5c, 0x4c,
	0x07, 0x73, 0x6f, 0xf1, 0x34, 0xbc, 0xa2, 0x7d, 0x47, 0x41, 0x97, 0xad, 0xcc, 0x97, 0x3a, 0x17,
	0xd1, 0xd1, 0x43, 0x34, 0xfe, 0xeb, 0x0d, 0x26, 0x5e, 0x1c, 0xe4, 0x1d, 0x3f, 0xf9, 0x03, 0xa4,
	0x10, 0x46, 0xf2, 0x4c, 0xfe, 0xe6, 0x56, 0x6a, 0xe5, 0x98, 0x43, 0x64, 0x5e, 0xf7, 0x67, 0x7e,
	0xee, 0x6a, 0xed, 0x81, 0x4f, 0x8b, 0xfd, 0x20, 0x49, 0x21, 0xc0, 0xf1, 0xaf, 0x1c, 0x62, 0x3a,
	0x9a, 0x0f, 0x17, 0x7e, 0x78, 0xd3, 0x9f, 0x1b, 0x37, 0x2a, 0xd7, 0x98, 0x5f, 0x1a, 0xd4, 0x8f,
	0x7d, 0xb3, 0xf3, 0x91, 0x04, 0x4e, 0xdc, 0x3f, 0x27, 0x56, 0x4c, 0xc7, 0x48, 0x7a, 0xdf, 0x9f,
	0x84, 0x4b, 0xfd, 0x88, 0x89, 0x71, 0xb0, 0xde, 0x3d, 0x8a, 0x8b, 0x6f, 0xe0, 0x77, 0x82, 0xe4,
	0x05, 0x8c, 0x14, 0xbf, 0x13, 0xfb, 0xbb, 0x46, 0x27, 0x79, 0x05, 0x87, 0x6d, 0xcb, 0xcd, 0x7a,
	0xfd, 0xf0, 0x8c, 0xba, 0xcb, 0xa3, 0xdb, 0xcb, 0xa3, 0x1f, 0x54, 0x1d, 0xb7, 0x39, 0x97, 0xe7,
	0x10, 0x74, 0x97, 0x49, 0x8e, 0x61, 0x8c, 0xa4, 0xc9, 0xc1, 0xe5, 0x4b, 0x38, 0x7d, 0x34, 0x73,
	0x12, 0xc0, 0xd1, 0x27, 0x51, 0x14, 0x92, 0xab, 0x70, 0x72, 0x10, 0x7d, 0x85, 0x2b, 0xa9, 0x5d,
	0xa3, 0xae, 0x97, 0xbe, 0x3d, 0x47, 0xcf, 0x76, 0x97, 0x8c, 0x75, 0x2c, 0xbd, 0xef, 0x83, 0x2a,
	0x4c, 0x0e, 0xb1, 0xd8, 0xb7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x75, 0x44, 0x04, 0x00, 0xea,
	0x03, 0x00, 0x00,
}
