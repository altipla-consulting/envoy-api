// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto

package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Configure the protocol used.
type DubboProxy_ProtocolType int32

const (
	DubboProxy_Dubbo DubboProxy_ProtocolType = 0
)

var DubboProxy_ProtocolType_name = map[int32]string{
	0: "Dubbo",
}
var DubboProxy_ProtocolType_value = map[string]int32{
	"Dubbo": 0,
}

func (x DubboProxy_ProtocolType) String() string {
	return proto.EnumName(DubboProxy_ProtocolType_name, int32(x))
}
func (DubboProxy_ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dubbo_proxy_b5a4d914da5596f4, []int{0, 0}
}

// Configure the serialization protocol used.
type DubboProxy_SerializationType int32

const (
	DubboProxy_Hessian2 DubboProxy_SerializationType = 0
)

var DubboProxy_SerializationType_name = map[int32]string{
	0: "Hessian2",
}
var DubboProxy_SerializationType_value = map[string]int32{
	"Hessian2": 0,
}

func (x DubboProxy_SerializationType) String() string {
	return proto.EnumName(DubboProxy_SerializationType_name, int32(x))
}
func (DubboProxy_SerializationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dubbo_proxy_b5a4d914da5596f4, []int{0, 1}
}

type DubboProxy struct {
	// The human readable prefix to use when emitting statistics.
	StatPrefix           string                       `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	ProtocolType         DubboProxy_ProtocolType      `protobuf:"varint,2,opt,name=protocol_type,json=protocolType,proto3,enum=envoy.extensions.filters.network.dubbo_proxy.v2alpha1.DubboProxy_ProtocolType" json:"protocol_type,omitempty"`
	SerializationType    DubboProxy_SerializationType `protobuf:"varint,3,opt,name=serialization_type,json=serializationType,proto3,enum=envoy.extensions.filters.network.dubbo_proxy.v2alpha1.DubboProxy_SerializationType" json:"serialization_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DubboProxy) Reset()         { *m = DubboProxy{} }
func (m *DubboProxy) String() string { return proto.CompactTextString(m) }
func (*DubboProxy) ProtoMessage()    {}
func (*DubboProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_dubbo_proxy_b5a4d914da5596f4, []int{0}
}
func (m *DubboProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DubboProxy.Unmarshal(m, b)
}
func (m *DubboProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DubboProxy.Marshal(b, m, deterministic)
}
func (dst *DubboProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DubboProxy.Merge(dst, src)
}
func (m *DubboProxy) XXX_Size() int {
	return xxx_messageInfo_DubboProxy.Size(m)
}
func (m *DubboProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_DubboProxy.DiscardUnknown(m)
}

var xxx_messageInfo_DubboProxy proto.InternalMessageInfo

func (m *DubboProxy) GetStatPrefix() string {
	if m != nil {
		return m.StatPrefix
	}
	return ""
}

func (m *DubboProxy) GetProtocolType() DubboProxy_ProtocolType {
	if m != nil {
		return m.ProtocolType
	}
	return DubboProxy_Dubbo
}

func (m *DubboProxy) GetSerializationType() DubboProxy_SerializationType {
	if m != nil {
		return m.SerializationType
	}
	return DubboProxy_Hessian2
}

func init() {
	proto.RegisterType((*DubboProxy)(nil), "envoy.extensions.filters.network.dubbo_proxy.v2alpha1.DubboProxy")
	proto.RegisterEnum("envoy.extensions.filters.network.dubbo_proxy.v2alpha1.DubboProxy_ProtocolType", DubboProxy_ProtocolType_name, DubboProxy_ProtocolType_value)
	proto.RegisterEnum("envoy.extensions.filters.network.dubbo_proxy.v2alpha1.DubboProxy_SerializationType", DubboProxy_SerializationType_name, DubboProxy_SerializationType_value)
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto", fileDescriptor_dubbo_proxy_b5a4d914da5596f4)
}

var fileDescriptor_dubbo_proxy_b5a4d914da5596f4 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x8f, 0x31, 0x4e, 0xc3, 0x30,
	0x18, 0x46, 0xeb, 0xb4, 0x45, 0xf4, 0xa7, 0xa0, 0xd6, 0x0b, 0x85, 0xa9, 0x74, 0xaa, 0x18, 0x6c,
	0x11, 0xc4, 0x05, 0x22, 0x06, 0x26, 0x54, 0xb5, 0x4c, 0x2c, 0x91, 0xd3, 0x3a, 0x60, 0x11, 0xd9,
	0x96, 0x6d, 0x42, 0xc2, 0x82, 0xc4, 0xc4, 0xc4, 0x81, 0x98, 0xb8, 0x0e, 0xb7, 0x40, 0x71, 0x5a,
	0x11, 0xd1, 0x0d, 0x36, 0xcb, 0x4f, 0xdf, 0xf3, 0x33, 0x44, 0x5c, 0xe6, 0xaa, 0xa4, 0x4b, 0x25,
	0x53, 0x71, 0x47, 0x53, 0x91, 0x39, 0x6e, 0xa8, 0xe4, 0xee, 0x49, 0x99, 0x07, 0xba, 0x7a, 0x4c,
	0x12, 0x15, 0x6b, 0xa3, 0x8a, 0x92, 0xe6, 0x21, 0xcb, 0xf4, 0x3d, 0x3b, 0x6b, 0x5e, 0x12, 0x6d,
	0x94, 0x53, 0xf8, 0xc2, 0x3b, 0x08, 0x2f, 0x1c, 0x97, 0x56, 0x28, 0x69, 0x49, 0xed, 0xb1, 0x64,
	0x2d, 0x22, 0xcd, 0xcd, 0x46, 0x74, 0x7c, 0x98, 0xb3, 0x4c, 0xac, 0x98, 0xe3, 0x74, 0x73, 0xa8,
	0x7d, 0x93, 0xb7, 0x36, 0xc0, 0x65, 0xb5, 0x98, 0x55, 0x03, 0x7c, 0x0a, 0x7b, 0xd6, 0x31, 0x17,
	0x6b, 0xc3, 0x53, 0x51, 0x8c, 0xd0, 0x18, 0x4d, 0x7b, 0x51, 0xef, 0xe3, 0xeb, 0xb3, 0xdd, 0x31,
	0xc1, 0x18, 0xcd, 0xa1, 0xa2, 0x33, 0x0f, 0xf1, 0x0b, 0xec, 0x7b, 0xc7, 0x52, 0x65, 0xb1, 0x2b,
	0x35, 0x1f, 0x05, 0x63, 0x34, 0x3d, 0x08, 0xaf, 0xc9, 0x9f, 0x12, 0xc9, 0x4f, 0x05, 0x99, 0xad,
	0xb5, 0x37, 0xa5, 0xe6, 0x11, 0x54, 0xaf, 0x77, 0x5f, 0x51, 0x30, 0x40, 0xf3, 0xbe, 0x6e, 0x10,
	0xfc, 0x8e, 0x00, 0x5b, 0x6e, 0x04, 0xcb, 0xc4, 0x33, 0x73, 0x42, 0xc9, 0x3a, 0xa3, 0xed, 0x33,
	0x16, 0xff, 0xcf, 0x58, 0x34, 0xdd, 0x5b, 0x2d, 0x43, 0xfb, 0x1b, 0x4f, 0x8e, 0xa0, 0xdf, 0x4c,
	0xc7, 0x3d, 0xe8, 0x7a, 0xdd, 0xa0, 0x35, 0x39, 0x81, 0xe1, 0x96, 0x0e, 0xf7, 0x61, 0xf7, 0x8a,
	0x5b, 0x2b, 0x98, 0x0c, 0x07, 0xad, 0xa8, 0x73, 0x1b, 0xe4, 0x61, 0xb2, 0xe3, 0xbf, 0x78, 0xfe,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0x30, 0xe0, 0x56, 0xee, 0x2d, 0x02, 0x00, 0x00,
}
